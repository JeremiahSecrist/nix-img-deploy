 #Our desired pipeline using only a Nix shell environment
name: Build and Deploy to Storj

on: workflow_dispatch

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    steps:
      - name: git checkout
        uses: actions/checkout@v3
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          extra-conf: |
            system-features = nixos-test benchmark big-parallel kvm
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      # Nix-specific logic begins here
      - name: Build the golden image
        run: |
          mkdir result && echo "hi" > ./result/a.vma.zst && cp ./result/*.vma.zst /tmp
      
      - name: Upload Goldenimage
        uses: actions/upload-artifact@v3
        with:
          name: goldenimage
          path: /tmp/*.vma.zst
  
  deploy:
    name: Deploy to storj
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Download Goldenimage
        uses: actions/download-artifact@v3
        with:
          name: goldenimage
          path: /tmp
  
      - uses: jakejarvis/s3-sync-action@master
        env:
          AWS_S3_ENDPOINT: ${{ secrets.AWS_S3_ENDPOINT }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: '/tmp'