 #Our desired pipeline using only a Nix shell environment
name: Build and Deploy to Storj

on: workflow_dispatch

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    steps:
      - name: git checkout
        uses: actions/checkout@v3
            
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          extra-conf: |
            system-features = nixos-test benchmark big-parallel kvm
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      #- run: |
          # Create with liberal rights, otherwise cache action will complain
          # about permission errors.
       #   sudo mkdir -p /nix/store
        #  sudo chmod -R 777 /nix

      - name: Cache nix env take N+1
        uses: actions/cache@v2
        with:
          path: |
            # See https://github.com/actions/cache/pull/726
            /nix/store/**
            # Missing something?
            /nix/var/nix/*/*
            /nix/var/nix/db/*
            /nix/var/nix/db/*/**
            !/nix/var/nix/daemon-socket/socket
            !/nix/var/nix/userpool/*
            !/nix/var/nix/gc.lock
            !/nix/var/nix/db/big-lock
            !/nix/var/nix/db/reserved
          key: ${{ runner.os }}-nix-store
        
      # Nix-specific logic begins here
      - name: Build the golden image
        run: |
          nix build . && cp ./result/*.vma.zst /tmp
      
      - name: Upload Goldenimage
        uses: actions/upload-artifact@v3
        with:
          name: goldenimage
          path: /tmp/*.vma.zst
          retention-days: 1 
  
  deploy:
    name: Deploy to storj
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Download Goldenimage
        id: download
        uses: actions/download-artifact@v3
        with:
          name: goldenimage
          path: /tmp/
      
      - name: Extract zip
        run: unzip -d /tmp /tmp/*.vma.zst
      
      - uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --exclude '*' --include '*.vma.zst'
        env:
          AWS_S3_ENDPOINT: ${{ secrets.AWS_S3_ENDPOINT }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: '${{steps.download.outputs.download-path}}'